@model OfferPaginationViewModel

@{
    var likedOffers = ViewData["LikedDislikedOffersIds"] as List<int>;
}

<div class="container" id="tourpackages-carousel">
    <div class="container mt-3">
        <div class="row">
            <div class="col-lg-6 col-md-6 col-md-offset-3 col-lg-offset-0">
                @await Html.PartialAsync("_SearchOffer", Model)
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-lg-12">
            <h1>
                @ViewData["Title"] <a class="btn icon-btn btn-primary pull-right" asp-controller="Offers" asp-action="Create"><span class="glyphicon btn-glyphicon glyphicon-plus img-circle"></span> Create New Offer</a>
            </h1>
        </div>
        @if (!Model.AllOffers.Offers.Any())
        {
            <h1>No Offers</h1>
        }
        else
        {
            @await Html.PartialAsync("_OfferPartial", Model)
        }
    </div>
</div>

@await Html.PartialAsync("_PagingOffer", Model)

@section Scripts {
    @await Html.PartialAsync("_ValidationScriptsPartial")
}